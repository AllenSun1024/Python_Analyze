use_svg_display:
display.set_matplotlib_formats 60 60

set_figsize:
use_svg_display 66 66

set_axes:
axes.set_xlabel 73 73
axes.set_ylabel 73 73
axes.set_xscale 74 74
axes.set_yscale 74 74
axes.set_xlim 75 75
axes.set_ylim 75 75
axes.legend 77 77
axes.grid 78 78

plot:
has_one_axis 91 91
len 93 93
has_one_axis 94 94
len 96 96
len 96 96
len 97 97
set_figsize 99 99
d2l.plt.gca 100 100
d2l.plt.gca.#.cla 101 101
zip 102 102
len 103 103
d2l.plt.gca.#.plot 103 103
d2l.plt.gca.#.plot 103 103
set_axes 104 104

has_one_axis:
hasattr 88 88
isinstance 88 88
hasattr 89 89

add_to_class:

wrapper:
setattr$obj.__name__ 109 109

save_hyperparameters:

save_hyperparameters:
inspect.currentframe 121 121
inspect.getargvalues 122 122
local_vars.items 123 123
set 124 124
k.startswith 124 124
self.hparams.items 125 125
setattr 126 126

__init__:
self.save_hyperparameters 136 136

draw:

draw:
collections.namedtuple 143 143
hasattr 144 144
collections.OrderedDict 145 145
collections.OrderedDict 146 146
collections.namedtuple.# 152 152
points.append 152 152
len 153 153
mean 156 156
mean 157 157
collections.namedtuple.# 156 157
line.append 156 157
points.clear 158 158
d2l.use_svg_display 161 161
d2l.plt.figure$figsize=self.figsize 163 163
self.data.items 165 165
zip$self.ls$self.colors 165 165
d2l.plt.plot 166 167
plt_lines.append 166 167
labels.append 168 168
d2l.plt.gca 169 169
axes.set_xlim$self.xlim 170 170
axes.set_ylim$self.ylim 171 171
axes.set_xlabel$self.xlabel 173 173
axes.set_ylabel$self.ylabel 174 174
axes.set_xscale$self.xscale 175 175
axes.set_yscale$self.yscale 176 176
axes.legend 177 177
display.display$self.fig 178 178
display.clear_output 179 179

__init__:
super 184 184
super 184 184
self.save_hyperparameters 185 185
ProgressBoard 186 186

loss:

forward:
hasattr 193 193
self.net 194 194

call:
self.forward 199 199

plot:
hasattr 203 203
self.trainer.train_batch_idx 206 206
self.trainer.num_train_batches 207 207
self.trainer.num_train_batches 208 208
self.plot_train_per_epoch 209 209
self.trainer.epoch 211 211
self.trainer.num_val_batches 212 212
self.plot_valid_per_epoch 213 213
d2l.numpy 214 214
int 215 215
self.board.draw 214 215

training_step:
self 217 217
self.loss 217 217
self.plot 218 218

validation_step:
self 222 222
self.loss 222 222
self.plot 223 223

configure_optimizers:

configure_optimizers:
tf.keras.optimizers.SGD$self.lr 230 230

__init__:
self.save_hyperparameters 235 235

get_dataloader:

train_dataloader:
self.get_dataloader 241 241

val_dataloader:
self.get_dataloader 244 244

get_tensorloader:
tuple 248 248
tf.data.Dataset.from_tensor_slices 250 250
tf.data.Dataset.shuffle 250 251
tf.data.Dataset.batch$self.batch_size 250 251

__init__:
self.save_hyperparameters 257 257

prepare_data:
data.train_dataloader 261 261
data.val_dataloader 262 262
len$self.train_dataloader 263 263
len$self.val_dataloader 264 264

prepare_model:

fit:
self.prepare_data 273 273
self.prepare_model 274 274
model.configure_optimizers 275 275
range$self.max_epochs 279 279
self.fit_epoch 280 280

fit_epoch:

prepare_batch:

fit_epoch:
tf.GradientTape 293 293
self.prepare_batch 294 294
self.model.training_step 294 294
tf.GradientTape.gradient$self.model.trainable_variables 295 295
self.clip_gradients$self.gradient_clip_val 297 297
zip$self.model.trainable_variables 298 298
self.optim.apply_gradients 298 298
self.prepare_batch 304 304
self.model.validation_step 304 304

clip_gradients:
tf.constant$dtype=tf.float32 309 309
isinstance$tf.IndexedSlices 310 311
tf.convert_to_tensor 310 310
tf.reduce_sum 312 312
sum 312 312
tf.math.sqrt 312 312
tf.greater 313 313
enumerate 314 314

__init__:
super 323 323
super 323 323
self.save_hyperparameters 324 324
tf.random.normal 326 326
tf.random.normal 327 327
d2l.reshape 328 328
d2l.matmul$self.X 328 328

get_dataloader:
slice$self.num_train 332 332
slice$self.num_train 332 332
self.get_tensorloader$self.X$self.y 333 333

__init__:
super 338 338
super 338 338
self.save_hyperparameters 339 339
tf.random.normal 340 340
tf.zeros 341 341
tf.Variable 342 342
tf.Variable 343 343

forward:
d2l.matmul$self.w 349 349
self.b 349 349

loss:
d2l.reshape$y_hat.shape 353 353
d2l.reduce_mean 354 354

configure_optimizers:
SGD$self.lr 358 358

__init__:
self.save_hyperparameters 364 364

apply_gradients:
self.lr 368 368
param.assign_sub 368 368

__init__:
super 373 373
super 373 373
self.save_hyperparameters 374 374
tf.initializers.RandomNormal 375 375
tf.keras.layers.Dense 376 376

forward:
self.net 382 382

loss:
tf.keras.losses.MeanSquaredError 386 386
tf.keras.losses.MeanSquaredError.# 387 387

configure_optimizers:
tf.keras.optimizers.SGD$self.lr 391 391

get_w_b:
self.get_weights 395 395
self.get_weights 395 395

__init__:
super 400 400
super 400 400
self.save_hyperparameters 401 401
tf.keras.datasets.fashion_mnist.load_data 402 402

text_labels:
int 410 410

get_dataloader:
len 418 418
process 419 419
tf.data.Dataset.from_tensor_slices 419 419
tf.data.Dataset.batch$self.batch_size 419 420
tf.data.Dataset.map 419 420
tf.data.Dataset.shuffle 419 420

visualize:
self.text_labels 426 426
d2l.show_images 427 427

show_images:

validation_step:
self 438 438
self.loss 439 439
self.plot 439 439
self.accuracy 440 440
self.plot 440 440

accuracy:
d2l.reshape 446 446
d2l.argmax 447 447
d2l.astype$Y.dtype 447 447
d2l.reshape 448 448
d2l.astype$d2l.float32 448 448
d2l.reduce_mean 449 449

loss:
d2l.reshape 453 453
d2l.reshape 454 454
tf.keras.losses.SparseCategoricalCrossentropy 455 455
tf.keras.losses.SparseCategoricalCrossentropy.# 456 456

layer_summary:
d2l.normal 460 460
layer 462 462
print$layer.__class__.__name__$X.shape 463 463

cpu:
tf.device 467 467

gpu:
tf.device 471 471

num_gpus:
tf.config.experimental.list_physical_devices 475 475
len 475 475

try_gpu:
num_gpus 481 481
gpu 482 482
cpu 483 483

try_all_gpus:
gpu 489 489
num_gpus 489 489
range 489 489

corr2d:
tf.zeros 494 494
tf.Variable 494 494
range 495 495
range 496 496
tf.reduce_sum 497 498

__init__:
super 504 504
super 504 504
tf.keras.layers.Conv2D 505 506
tf.keras.layers.Conv2D 507 508
tf.keras.layers.Conv2D 511 512
tf.keras.layers.BatchNormalization 513 513
tf.keras.layers.BatchNormalization 514 514

call:
self.conv1 517 517
self.bn1 517 517
tf.keras.activations.relu 517 517
self.conv2 518 518
self.bn2 518 518
self.conv3 520 520
tf.keras.activations.relu 522 522

_download:
d2l.DATA_URL 527 527
d2l.download$self.root 527 528
open 529 529
open.read 530 530

_preprocess:
re.sub 534 534
re.lower 534 534

_tokenize:
list 538 538

build:
self._preprocess 542 542
self._tokenize 542 542
Vocab 543 543

__init__:
super$d2l.TimeMachine 549 549
super 549 549
self.save_hyperparameters 550 550
self._download 551 551
self.build 551 551
len 553 553
range 553 553
d2l.tensor 552 553

get_dataloader:
slice$self.num_train 558 558
self.num_train 559 559
self.num_val 559 559
slice$self.num_train 558 559
self.get_tensorloader$self.X$self.Y 560 560

__init__:
isinstance 567 567
collections.Counter 570 570
collections.Counter.#.items 571 571
sorted 571 572
set 574 575
sorted 574 575
list 574 575
enumerate$self.idx_to_token 577 577

__len__:
len$self.idx_to_token 580 580

__getitem__:
isinstance 583 583
self.token_to_idx.get$self.unk 584 584
self.__getitem__ 585 585

to_tokens:
hasattr 588 588
len 588 588
int 589 589

unk:

__init__:
super 599 599
super 599 599
self.save_hyperparameters 600 600
d2l.normal 601 602
tf.Variable 601 602
d2l.normal 603 604
tf.Variable 603 604
d2l.zeros 605 605
tf.Variable 605 605

forward:
d2l.reshape 611 611
d2l.matmul$self.W_xh 614 614
d2l.matmul$self.W_hh 615 615
self.b_h 616 616
d2l.tanh 614 616
outputs.append 617 617

check_len:
len 622 622
len 622 622

check_shape:

__init__:
super 632 632
super 632 632
self.save_hyperparameters 633 633
self.init_params 634 634

init_params:
d2l.normal$self.rnn.num_hiddens$self.vocab_size 637 638
self.rnn.sigma 638 638
tf.Variable 637 638
d2l.zeros$self.vocab_size 639 639
tf.Variable 639 639

training_step:
self 642 642
self.loss 642 642
d2l.exp 643 643
self.plot 643 643

validation_step:
self 647 647
self.loss 647 647
d2l.exp 648 648
self.plot 648 648

one_hot:
tf.transpose 653 653
tf.one_hot$self.vocab_size 653 653

output_layer:
d2l.matmul$self.W_hq 657 657
self.b_q 657 657
d2l.stack 658 658

forward:
self.one_hot 663 663
self.rnn 664 664
self.output_layer 665 665

predict:
len 670 670
range 670 670
d2l.tensor 671 671
self.one_hot 672 672
self.rnn 673 673
len 674 674
outputs.append 675 675
self.output_layer 677 677
d2l.argmax 678 678
d2l.reshape 678 678
int 678 678
outputs.append 678 678

__init__:
super 684 684
super 684 684
self.save_hyperparameters 685 685
tf.keras.layers.SimpleRNN 686 688

forward:
self.rnn 691 691

init_params:
tf.keras.layers.Dense$self.vocab_size 697 697

output_layer:
self.linear 700 700
d2l.transpose 700 700

__init__:
super 705 705
super 705 705
self.save_hyperparameters 706 706
triple 713 713
triple 714 714
triple 715 715
triple 716 716

__init__:
d2l.Module.__init__ 721 721
self.save_hyperparameters 722 722
tf.keras.layers.GRUCell 723 723
range 724 724
tf.keras.layers.RNN 725 726

forward:
self.rnn 729 729

_download:
d2l.DATA_URL 736 736
d2l.download$self.root 735 737
d2l.extract 735 737
self.root 738 738
open 738 738
open.read 739 739

_preprocess:
text.replace.#.replace.#.replace.#.replace 744 744
text.replace.#.replace.#.replace.#.replace 744 744
no_space 747 747
text.replace.#.replace.#.replace.#.lower 748 748
enumerate 748 748

_tokenize:
text.split 754 754
enumerate 754 754
line.split 756 756
len 757 757
src.append 759 759
tgt.append 760 760

__init__:
super 765 765
super 765 765
self.save_hyperparameters 766 766
self._download 768 768
self._build_arrays 767 768

_build_arrays:
self._preprocess 780 780
self.num_train 781 781
self.num_val 781 781
self._tokenize 780 781
_build_one 782 782
_build_one 783 783

_build_one:
pad_or_trim$self.num_steps 776 776
d2l.Vocab 777 777
d2l.tensor 778 778

get_dataloader:
slice$self.num_train 788 788
slice$self.num_train 788 788
self.get_tensorloader$self.arrays 789 789

build:
zip 793 794
self._build_arrays$self.src_vocab$self.tgt_vocab 795 796

__init__:
super 802 802
super 802 802

call:

__init__:
super 812 812
super 812 812

init_state:

call:

__init__:
super 825 825
super 825 825

call:
self.encoder 830 830
self.decoder.init_state 831 831
self.decoder 832 832

__init__:
super 840 840
super 840 840
tf.keras.layers.Embedding 841 841
d2l.GRU 842 842

forward:
d2l.transpose 846 846
self.embedding 846 846
self.rnn 848 848

__init__:
super 856 856
super 856 856
self.save_hyperparameters 857 857

forward:
self.encoder 860 860
self.decoder 860 860

predict_step:
self.encoder 865 865
d2l.expand_dims 867 867
range 868 868
self.decoder 869 869
d2l.argmax 870 870
outputs.append 870 870
d2l.concat 871 871

bleu:
pred_seq.split 877 877
label_seq.split 877 877
len 878 878
len 878 878
min 879 879
math.exp 879 879
range 880 880
collections.defaultdict 881 881
range 882 882
range 884 884
math.pow 888 888
math.pow 888 888

show_heatmaps:
d2l.use_svg_display 896 896
len 897 897
len 897 897
d2l.plt.subplots 898 899
zip 900 900
enumerate 900 900
zip 901 901
enumerate 901 901
d2l.numpy 902 902
ax.imshow 902 902
ax.set_xlabel 904 904
ax.set_ylabel 906 906
ax.set_title 908 908
fig.colorbar 909 909

masked_softmax:
tf.nn.softmax 917 917
len$valid_lens.shape 920 920
tf.repeat 921 921
tf.reshape 924 924
tf.reshape 927 927
d2l.sequence_mask 927 927
tf.reshape 928 928
tf.nn.softmax 928 928

__init__:
super 935 935
super 935 935
tf.keras.layers.Dense 936 936
tf.keras.layers.Dense 937 937
tf.keras.layers.Dense 938 938
tf.keras.layers.Dropout 939 939

call:
self.W_q 942 942
self.W_k 942 942
tf.expand_dims 947 947
tf.expand_dims 947 948
tf.nn.tanh 949 949
self.w_v 953 953
tf.squeeze 953 953
masked_softmax 954 954
self.dropout$self.attention_weights 957 958
tf.matmul 957 958

__init__:
super 965 965
super 965 965
tf.keras.layers.Dropout 966 966

call:
tf.matmul 975 975
tf.cast$dtype=tf.float32 976 976
tf.math.sqrt 975 976
masked_softmax 977 977
self.dropout$self.attention_weights 978 978
tf.matmul 978 978

__init__:
super 985 985
super 985 985

attention_weights:

__init__:
super 997 997
super 997 997
d2l.DotProductAttention 999 999
tf.keras.layers.Dense 1000 1000
tf.keras.layers.Dense 1001 1001
tf.keras.layers.Dense 1002 1002
tf.keras.layers.Dense 1003 1003

call:
self.W_q 1013 1013
transpose_qkv$self.num_heads 1013 1013
self.W_k 1014 1014
transpose_qkv$self.num_heads 1014 1014
self.W_v 1015 1015
transpose_qkv$self.num_heads 1015 1015
tf.repeat$repeats=self.num_heads 1020 1020
self.attention 1023 1023
transpose_output$self.num_heads 1026 1026
self.W_o 1027 1027

transpose_qkv:
tf.reshape 1038 1038
tf.transpose 1043 1043
tf.reshape 1048 1048

transpose_output:
tf.reshape 1055 1055
tf.transpose 1056 1056
tf.reshape 1057 1057

__init__:
super 1064 1064
super 1064 1064
tf.keras.layers.Dropout 1065 1065
np.zeros 1067 1067
np.arange$dtype=np.float32 1068 1068
np.reshape 1068 1069
np.arange$dtype=np.float32 1069 1070
np.power 1069 1070
np.sin 1071 1071
np.cos 1072 1072

call:
self.dropout 1076 1076

__init__:
super 1083 1083
super 1083 1083
tf.keras.layers.Dense 1084 1084
tf.keras.layers.ReLU 1085 1085
tf.keras.layers.Dense 1086 1086

call:
self.dense1 1089 1089
self.relu 1089 1089
self.dense2 1089 1089

__init__:
super 1096 1096
super 1096 1096
tf.keras.layers.Dropout 1097 1097
tf.keras.layers.LayerNormalization 1098 1098

call:
self.dropout 1101 1101
self.ln 1101 1101

__init__:
super 1109 1109
super 1109 1109
d2l.MultiHeadAttention 1110 1111
AddNorm 1112 1112
PositionWiseFFN 1113 1113
AddNorm 1114 1114

call:
self.attention 1117 1117
self.addnorm1 1117 1117
self.ffn 1118 1118
self.addnorm2 1118 1118

__init__:
super 1127 1127
super 1127 1127
tf.keras.layers.Embedding 1129 1129
d2l.PositionalEncoding 1130 1130
EncoderBlock 1131 1133
range 1133 1134

call:
self.embedding 1140 1140
tf.cast$self.num_hiddens$dtype=tf.float32 1141 1141
tf.math.sqrt 1140 1141
self.pos_encoding 1140 1141
len$self.blks 1142 1142
enumerate$self.blks 1143 1143
blk 1144 1144

annotate:
d2l.plt.gca 1150 1150
dict 1151 1151
d2l.plt.annotate 1150 1151

train_2d:
range 1160 1160
trainer 1162 1162
trainer 1164 1164
results.append 1165 1165
float 1166 1166
float 1166 1166
print 1166 1166

show_trace_2d:
d2l.set_figsize 1173 1173
zip 1174 1174
d2l.plt.plot 1174 1174
d2l.arange 1175 1175
d2l.arange 1176 1176
d2l.meshgrid 1175 1176
f 1177 1177
d2l.plt.contour 1177 1177
d2l.plt.xlabel 1178 1178
d2l.plt.ylabel 1179 1179

__init__:
self.start 1186 1186

start:
time.time 1190 1190

stop:
time.time 1194 1194
self.tik 1194 1194
self.times.append 1194 1194

avg:
sum$self.times 1199 1199
len$self.times 1199 1199

sum:
sum$self.times 1203 1203

cumsum:
np.array$self.times 1207 1207
np.cumsum 1207 1207
np.tolist 1207 1207

get_data_ch11:
d2l.DATA_URL 1209 1209
d2l.download 1214 1214
np.genfromtxt$dtype=np.float32 1214 1215
np.genfromtxt.#.mean 1216 1216
np.genfromtxt.#.std 1216 1216
d2l.load_array 1217 1218

train_ch11:
tf.random.normal 1225 1226
tf.Variable 1225 1226
tf.zeros 1227 1227
tf.Variable 1227 1227
d2l.Animator 1231 1232
d2l.Timer 1233 1233
range 1235 1235
tf.GradientTape 1237 1237
net 1238 1238
loss 1238 1238
tf.math.reduce_mean 1238 1238
tf.GradientTape.gradient 1240 1240
trainer_fn 1241 1241
timer.stop 1244 1244
tf.data.experimental.cardinality 1246 1246
tf.data.experimental.numpy 1246 1246
d2l.evaluate_loss 1247 1247
d2l.Animator.#.add 1248 1248
timer.start 1249 1249
timer.avg 1250 1250
print 1250 1250
timer.cumsum 1251 1251

train_concise_ch11:
tf.keras.Sequential 1256 1256
tf.random_normal_initializer 1258 1258
tf.keras.layers.Dense 1257 1258
tf.keras.Sequential.#.add 1257 1258
trainer_fn 1259 1259
tf.keras.losses.MeanSquaredError 1260 1260
d2l.Animator 1261 1262
d2l.Timer 1263 1263
range 1264 1264
tf.GradientTape 1266 1266
tf.keras.Sequential.# 1267 1267
tf.keras.losses.MeanSquaredError.# 1268 1268
tf.GradientTape.gradient 1270 1270
zip 1271 1271
trainer_fn.#.apply_gradients 1271 1271
timer.stop 1274 1274
tf.data.experimental.cardinality 1276 1276
tf.data.experimental.numpy 1276 1276
d2l.evaluate_loss 1279 1279
d2l.Animator.#.add 1280 1280
timer.start 1281 1281
timer.avg 1282 1282
print 1282 1282

__init__:

__enter__:
d2l.Timer 1291 1291

__exit__:
self.timer.stop 1295 1295
print 1295 1295

box_corner_to_center:
d2l.stack 1306 1306

box_center_to_corner:
d2l.stack 1318 1318

bbox_to_rect:
d2l.plt.Rectangle 1328 1330

update_D:
tf.ones 1337 1337
tf.zeros 1338 1338
net_G 1340 1340
tf.GradientTape 1341 1341
net_D 1342 1342
net_D 1343 1343
tf.squeeze 1345 1345
loss 1345 1345
tf.squeeze 1346 1346
loss 1345 1346
tf.GradientTape.gradient$net_D.trainable_variables 1347 1347
zip$net_D.trainable_variables 1348 1348
optimizer_D.apply_gradients 1348 1348

update_G:
tf.ones 1356 1356
tf.GradientTape 1357 1357
net_G 1359 1359
net_D 1361 1361
tf.squeeze 1363 1363
loss 1363 1363
tf.GradientTape.gradient$net_G.trainable_variables 1364 1364
zip$net_G.trainable_variables 1365 1365
optimizer_G.apply_gradients 1365 1365

load_array:
d2l.DATA_URL 1368 1368
tf.data.Dataset.from_tensor_slices 1375 1375
tf.data.Dataset.from_tensor_slices.#.shuffle 1377 1377
tf.data.Dataset.from_tensor_slices.#.batch 1378 1378

synthetic_data:
tf.zeros 1385 1385
tf.random.normal$shape=X.shape 1386 1386
tf.reshape 1387 1387
tf.matmul 1387 1387
tf.random.normal$shape=y.shape 1388 1388
tf.reshape 1389 1389

sgd:
zip 1397 1397
param.assign_sub 1398 1398

load_data_fashion_mnist:
tf.keras.datasets.fashion_mnist.load_data 1404 1404
process 1412 1412
tf.data.Dataset.from_tensor_slices 1412 1412
tf.data.Dataset.batch 1412 1413
len 1413 1413
tf.data.Dataset.shuffle 1412 1413
tf.data.Dataset.map 1412 1413
process 1414 1414
tf.data.Dataset.from_tensor_slices 1414 1414
tf.data.Dataset.batch 1414 1415
tf.data.Dataset.map 1414 1415

__init__:
d2l.Timer 1422 1422
d2l.Animator 1423 1425

on_epoch_begin:
self.timer.start 1432 1432

on_epoch_end:
self.timer.stop 1434 1434
self.net.evaluate$self.test_iter 1435 1436
self.animator.add 1438 1438
self.num_epochs 1439 1439
iter$self.train_iter 1440 1440
next 1440 1440
tf.data.experimental.cardinality$self.train_iter 1441 1442
tf.data.experimental.numpy 1441 1442
print 1443 1444
self.timer.avg 1445 1445
str$self.device_name 1446 1446
print 1445 1446

train_ch6:
tf.distribute.OneDeviceStrategy 1453 1453
tf.distribute.OneDeviceStrategy.#.scope 1454 1454
tf.keras.optimizers.SGD 1455 1455
tf.keras.losses.SparseCategoricalCrossentropy 1456 1456
net_fn 1457 1457
net_fn.#.compile 1458 1458
TrainCallback 1459 1460
net_fn.#.fit 1461 1461

evaluate_accuracy:
Accumulator 1468 1468
net 1470 1470
accuracy 1470 1470
d2l.size 1470 1470
Accumulator.#.add 1470 1470

linreg:
d2l.matmul 1477 1477

squared_loss:
d2l.reshape$y_hat.shape 1483 1483

get_fashion_mnist_labels:
int 1491 1491

show_images:
d2l.plt.subplots 1498 1498
axes.flatten.#.flatten.#.flatten.#.flatten 1499 1499
zip 1500 1500
enumerate 1500 1500
d2l.numpy 1502 1502
ax.imshow 1505 1505
ax.axes.get_xaxis 1506 1506
ax.axes.set_visible 1506 1506
ax.axes.get_yaxis 1507 1507
ax.axes.set_visible 1507 1507
ax.set_title 1509 1509

__init__:
d2l.use_svg_display 1522 1522
d2l.plt.subplots 1523 1523

add:
hasattr 1533 1533
len 1535 1535
hasattr 1536 1536
range 1539 1539
range 1541 1541
zip 1542 1542
enumerate 1542 1542
zip$self.X$self.Y$self.fmts 1547 1547
self.config_axes 1549 1549
display.display$self.fig 1550 1550
display.clear_output 1551 1551

__init__:

add:
float 1560 1560
zip$self.data 1560 1560

reset:
len$self.data 1563 1563

__getitem__:

accuracy:
len$y_hat.shape 1573 1573
d2l.argmax 1574 1574
d2l.astype$y.dtype 1575 1575
d2l.astype$y.dtype 1576 1576
d2l.reduce_sum 1576 1576
float 1576 1576

download:
url.startswith 1580 1580
os.makedirs 1584 1584
url.split 1585 1585
os.path.join 1585 1585
os.path.exists 1587 1587
hashlib.sha1 1588 1588
open 1589 1589
open.read 1591 1591
hashlib.sha1.#.update 1594 1594
hashlib.sha1.#.hexdigest 1595 1595
print 1598 1598
requests.get 1599 1599
open 1600 1600
open.write$r.content 1601 1601

extract:
os.path.dirname 1608 1608
os.path.splitext 1609 1609
zipfile.ZipFile 1612 1612
tarfile.open 1614 1614
zipfile.ZipFile.#.extractall 1617 1617

download_extract:
download 1623 1623
os.path.dirname 1624 1624
os.path.splitext 1625 1625
zipfile.ZipFile 1627 1627
tarfile.open 1629 1629
zipfile.ZipFile.#.extractall 1632 1632
os.path.join 1633 1633

tokenize:
line.split 1641 1641
list 1641 1641

evaluate_loss:
d2l.Accumulator 1647 1647
net 1649 1649
loss 1649 1649
d2l.reduce_sum 1650 1650
d2l.size 1650 1650
d2l.Accumulator.#.add 1650 1650

grad_clipping:
tf.constant$dtype=tf.float32 1657 1657
isinstance$tf.IndexedSlices 1660 1660
tf.convert_to_tensor 1661 1661
new_grad.append 1661 1661
new_grad.append 1663 1663
tf.reduce_sum 1664 1664
tf.numpy 1664 1664
sum 1664 1665
tf.math.sqrt 1664 1665
tf.cast$tf.float32 1666 1666
tf.greater 1667 1667
enumerate 1668 1668

read_data_nmt:
d2l.DATA_URL 1674 1674
d2l.download_extract 1681 1681
os.path.join 1682 1682
open 1682 1682
open.read 1683 1683

preprocess_nmt:
text.lower.#.lower.#.lower.#.replace 1694 1694
text.lower.#.lower.#.lower.#.replace 1694 1694
text.lower.#.lower.#.lower.#.lower 1694 1694
no_space 1696 1696
enumerate 1697 1697

no_space:
set 1690 1690

tokenize_nmt:
text.split 1705 1705
enumerate 1705 1705
line.split 1708 1708
len 1709 1709
source.append 1710 1710
target.append 1711 1711

show_list_len_pair_hist:
d2l.set_figsize 1718 1718
len 1720 1720
len 1720 1720
d2l.plt.hist 1719 1720
d2l.plt.xlabel 1721 1721
d2l.plt.ylabel 1722 1722
patch.set_hatch 1724 1724
d2l.plt.legend 1725 1725

truncate_pad:
len 1731 1731
len 1733 1733

build_array_nmt:
truncate_pad 1742 1743
d2l.tensor 1742 1743
d2l.astype$d2l.int32 1745 1745
d2l.reduce_sum 1744 1745

load_data_nmt:
read_data_nmt 1753 1753
preprocess_nmt 1753 1753
tokenize_nmt 1754 1754
d2l.Vocab 1755 1756
d2l.Vocab 1757 1758
build_array_nmt 1759 1759
build_array_nmt 1760 1760
d2l.load_array 1762 1762

bleu:
pred_seq.split 1769 1769
label_seq.split 1769 1769
len 1770 1770
len 1770 1770
min 1771 1771
math.exp 1771 1771
range 1772 1772
collections.defaultdict 1773 1773
range 1774 1774
range 1776 1776
math.pow 1780 1780
math.pow 1780 1780

__init__:
super 1788 1788
super 1788 1788
tf.keras.layers.Embedding 1790 1790
tf.keras.layers.GRUCell 1792 1792
range 1793 1793
tf.keras.layers.StackedRNNCells 1791 1793
tf.keras.layers.RNN 1791 1794

call:
self.embedding 1799 1799
self.rnn 1800 1800

__init__:
super 1809 1809
super 1809 1809

call:
tf.ones_like$dtype=tf.float32 1816 1816
sequence_mask$self.valid_len 1817 1817
tf.one_hot 1818 1818
tf.keras.losses.CategoricalCrossentropy 1819 1820
tf.keras.losses.CategoricalCrossentropy.__call__ 1819 1820
tf.reduce_mean 1821 1821

train_seq2seq:
tf.keras.optimizers.Adam 1828 1828
d2l.Animator 1829 1830
range 1831 1831
d2l.Timer 1832 1832
d2l.Accumulator 1833 1833
tf.constant 1836 1836
tf.reshape 1836 1837
tf.concat 1838 1838
tf.GradientTape 1839 1839
net 1840 1840
MaskedSoftmaxCELoss 1841 1841
MaskedSoftmaxCELoss.__call__ 1841 1841
tf.GradientTape.gradient$net.trainable_variables 1842 1842
d2l.grad_clipping 1843 1843
zip$net.trainable_variables 1844 1844
tf.keras.optimizers.Adam.#.apply_gradients 1844 1844
tf.reduce_sum 1845 1845
tf.numpy 1845 1845
tf.reduce_sum 1846 1846
d2l.Accumulator.#.add 1846 1846
d2l.Animator.#.add 1848 1848
d2l.Timer.#.stop 1849 1849
str 1850 1850
print 1849 1850

sequence_mask:
tf.range$dtype=tf.float32 1857 1857
tf.cast$dtype=tf.float32 1858 1858
len$X.shape 1860 1860
tf.expand_dims 1861 1861
tf.where 1861 1861
tf.where 1863 1863

predict_seq2seq:
src_sentence.lower 1870 1870
src_sentence.split 1870 1870
len 1872 1872
tf.constant 1872 1872
d2l.truncate_pad 1873 1873
tf.expand_dims 1875 1875
net.encoder 1876 1876
net.decoder.init_state 1877 1877
tf.constant 1879 1879
tf.expand_dims 1879 1879
range 1881 1881
net.decoder 1882 1882
tf.argmax 1885 1885
tf.squeeze 1886 1886
attention_weight_seq.append$net.decoder.attention_weights 1889 1889
tf.squeeze.#.numpy 1894 1894
output_seq.append 1894 1894
tf.reshape 1895 1895
tf.numpy 1895 1895
tf.tolist 1895 1895
tgt_vocab.to_tokens 1895 1895

