configure_tpu:
tf.contrib.cluster_resolver.TPUClusterResolver$FLAGS.tpu$zone=FLAGS.tpu_zone$project=FLAGS.gcp_project 20 21
tf.contrib.cluster_resolver.TPUClusterResolver.#.get_master 22 22
tf.ConfigProto 27 27
tf.logging.info 33 33
FLAGS.num_core_per_host 34 34
tf.logging.info 36 36
tf.contrib.distribute.MirroredStrategy$num_gpus=FLAGS.num_core_per_host 38 39
tf.logging.info$strategy.num_replicas_in_sync 40 41
FLAGS.num_hosts 50 50
FLAGS.num_core_per_host 50 50
tf.contrib.tpu.TPUConfig$iterations_per_loop=FLAGS.iterations 48 51
tf.contrib.tpu.RunConfig$model_dir=FLAGS.model_dir$keep_checkpoint_max=FLAGS.max_save$save_checkpoints_steps=FLAGS.save_steps 44 56

tpu_scaffold:
tf.global_variables 61 61
tf.trainable_variables 61 61
FLAGS.init_checkpoint 64 64
FLAGS.init_checkpoint.endswith 65 65
os.path.dirname$FLAGS.init_checkpoint 66 66
tf.train.latest_checkpoint 67 67
tf.logging.info 71 71
get_assignment_map_from_checkpoint 74 74
tf.train.init_from_checkpoint 77 77
tf.train.Scaffold 78 78

init_from_checkpoint:
tf.train.init_from_checkpoint 82 82
tf.logging.info 85 85
var.name 88 88
tf.logging.info$var.name$var.shape 90 91

get_train_op:
tf.train.get_or_create_global_step 96 96
FLAGS.warmup_steps 99 99
tf.cast$tf.float32 100 100
tf.cast$FLAGS.warmup_steps$tf.float32 101 101
FLAGS.learning_rate 102 102
FLAGS.decay_method 107 107
FLAGS.warmup_steps 110 110
FLAGS.train_steps 111 111
FLAGS.warmup_steps 111 111
FLAGS.learning_rate 112 112
FLAGS.min_lr_ratio 112 112
tf.train.polynomial_decay$FLAGS.learning_rate 108 112
FLAGS.decay_method 113 113
FLAGS.warmup_steps 116 116
FLAGS.train_steps 117 117
FLAGS.warmup_steps 117 117
tf.train.cosine_decay$FLAGS.learning_rate$alpha=FLAGS.min_lr_ratio 114 118
ValueError$FLAGS.decay_method 120 120
tf.where 122 123
FLAGS.weight_decay 125 125
FLAGS.num_core_per_host 126 126
ValueError 127 128
FLAGS.weight_decay 130 130
tf.train.AdamOptimizer$epsilon=FLAGS.adam_epsilon 131 133
AdamWeightDecayOptimizer$epsilon=FLAGS.adam_epsilon$weight_decay_rate=FLAGS.weight_decay 135 139
tf.contrib.tpu.CrossShardOptimizer 142 142
tf.train.AdamOptimizer.#.compute_gradients 145 145
zip 146 146
tf.clip_by_global_norm$FLAGS.clip 147 147
getattr 149 149
len 151 151
range 151 151
re.search 152 152
re.search.#.group 154 154
int 154 154
max 154 154
len 156 156
range 156 156
range 157 157
FLAGS.lr_layer_decay_rate 159 159
tf.logging.info 161 162
zip 166 166
tf.train.AdamOptimizer.#.apply_gradients 165 166
FLAGS.weight_decay 169 169
tf.train.get_or_create_global_step.#.assign 171 171
tf.group 171 171

clean_ckpt:
tf.reset_default_graph 180 180
tf.contrib.framework.list_variables 182 182
name.startswith 185 185
name.lower 185 185
tf.logging.info 187 187
tf.logging.info 189 189
tf.logging.info 191 191
tf.contrib.framework.load_checkpoint 192 192
tf.contrib.framework.load_checkpoint.#.get_tensor 194 194
tf.get_variable_scope 198 198
tf.variable_scope$reuse=tf.AUTO_REUSE 198 198
tf.get_variable 200 200
tf.placeholder$v.dtype$shape=v.shape 203 203
tf.assign 204 204
zip 204 204
tf.Variable$dtype=tf.int64 205 206
tf.all_variables 207 207
tf.train.Saver 207 207
tf.gfile.Exists 209 209
tf.gfile.MakeDirs 210 210
tf.Session 213 213
tf.initialize_all_variables 214 214
tf.Session.run 214 214
six.iteritems 216 216
zip 215 216
tf.Session.run 217 217
join 220 220
tf.train.Saver.#.save 220 221

avg_checkpoints:
tf.reset_default_graph 225 225
tf.train.get_checkpoint_state 227 227
tf.contrib.framework.list_variables 229 229
name.startswith 232 232
np.zeros 233 233
tf.contrib.framework.load_checkpoint 235 235
tf.contrib.framework.load_checkpoint.#.get_tensor 237 237
tf.logging.info 240 240
len 242 242
tf.get_variable_scope 244 244
tf.variable_scope$reuse=tf.AUTO_REUSE 244 244
tf.get_variable 246 246
tf.placeholder$v.dtype$shape=v.shape 249 249
tf.assign 250 250
zip 250 250
tf.Variable$dtype=tf.int64 251 252
tf.all_variables 253 253
tf.train.Saver 253 253
tf.Session 256 256
tf.initialize_all_variables 257 257
tf.Session.run 257 257
six.iteritems 259 259
zip 258 259
tf.Session.run 260 260
join 262 262
tf.train.Saver.#.save 262 263

get_assignment_map_from_checkpoint:
collections.OrderedDict 271 271
re.match 274 274
re.match.#.group 276 276
tf.train.list_variables 279 279
collections.OrderedDict 281 281

__init__:
super 308 308
super 308 308

apply_gradients:
self._get_variable_name$param.name 325 325
param.shape.as_list 329 329
tf.zeros_initializer 332 332
tf.get_variable$dtype=tf.float32 327 332
param.shape.as_list 335 335
tf.zeros_initializer 338 338
tf.get_variable$dtype=tf.float32 333 338
tf.multiply$self.beta_1 342 342
self.beta_1 342 342
tf.multiply 342 342
tf.multiply$self.beta_2 344 344
self.beta_2 344 344
tf.square 345 345
tf.multiply 344 345
tf.sqrt 347 347
self.epsilon 347 347
self._do_use_weight_decay 356 356
self.weight_decay_rate 357 357
self.learning_rate 359 359
param.assign 364 364
tf.get_variable.#.assign 365 365
tf.get_variable.#.assign 366 366
assignments.extend 363 366
tf.group 368 368

_do_use_weight_decay:
re.search 375 375
re.search 380 380
tf.logging.info 381 381

_get_variable_name:
re.match 387 387
re.match.#.group 389 389

